{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"lab-docs/lab1/","text":"LAB 1: Intro to MATLAB Self-Balancing Robot Setup Introduction Welcome to the first session of the ES3011 experimental labs. We have two (2) sections in this lab: Introduction to MATLAB Self-Balancing Robot Setup Learning Outcomes Our goal at the end of this labs is that you should be able to: Perform basic linear algebra computations using MATLAB command window Write and run a MATLAB script Use the plot function in MATLAB Use basic control system functions such as tf , ss in MATLAB 1. Introduction to MATLAB In this section, you will get a gentle introduction to MATLAB and how to use it for control systems design and analysis. Instructions: If you don't have MATLAB, please follow this guide on installing MATLAB. Access the MATLAB Tutorials here Read through the following chapters to get the basics: Chapter 1 Chapter 2 Chapter 3 (through Identity Matrix, but skip 3D plotting, multi-dimensional arrays and structures) Open up the MATLAB software. Create a MATLAB script that does the following: Q1: Add two 3x3 identity matrices and multiplies that result by the vector [1;2;3] Q2: Plot the function y = sin(t) from 0 to 10 seconds with labeled axes and a suitable title. Q3: Find the roots of s^4 + 3s^3 - 15s^2 - 2s + 9 . Hint: First declare s = tf('s') and use zero(_yourFunction_) to find the roots. 2. Self-Balancing Robot Setup In this section, you will walk through the process of setting up the self-balancing robot and enable your programming environment in MATLAB. Instructions: If you don't have MATLAB, please follow this guide on installing MATLAB. Download and set up Visual Studio Code following this guide . Download Git (with Git Bash) here Calibrating the robot sensors (on-board IMU): The self-balancing robot uses an IMU (inertial measurement unit) for pose measurement. This sensor needs to be calibrated properly. Follow the instructions here What to Submit: Prepare a report which contains the following: Introduction: a few sentences to introduce the topic of the lab Section 1: MATLAB Publish your script (and its output) as a PDF from MATLAB. Follow this guide to see how to. Section 2: Self-balancing Robot Setup [ Nothing to report here. Just ensure you are able to calibrate your robot ] Conclusion: a few sentences concluding the report explaining the goals, what you learned, and any other conclusions.","title":"Lab 1"},{"location":"lab-docs/lab1/#lab_1_intro_to_matlab_self-balancing_robot_setup","text":"","title":"LAB 1: Intro to MATLAB &amp; Self-Balancing Robot Setup"},{"location":"lab-docs/lab1/#introduction","text":"Welcome to the first session of the ES3011 experimental labs. We have two (2) sections in this lab: Introduction to MATLAB Self-Balancing Robot Setup","title":"Introduction"},{"location":"lab-docs/lab1/#learning_outcomes","text":"Our goal at the end of this labs is that you should be able to: Perform basic linear algebra computations using MATLAB command window Write and run a MATLAB script Use the plot function in MATLAB Use basic control system functions such as tf , ss in MATLAB","title":"Learning Outcomes"},{"location":"lab-docs/lab1/#1_introduction_to_matlab","text":"In this section, you will get a gentle introduction to MATLAB and how to use it for control systems design and analysis.","title":"1. Introduction to MATLAB"},{"location":"lab-docs/lab1/#instructions","text":"If you don't have MATLAB, please follow this guide on installing MATLAB. Access the MATLAB Tutorials here Read through the following chapters to get the basics: Chapter 1 Chapter 2 Chapter 3 (through Identity Matrix, but skip 3D plotting, multi-dimensional arrays and structures) Open up the MATLAB software. Create a MATLAB script that does the following: Q1: Add two 3x3 identity matrices and multiplies that result by the vector [1;2;3] Q2: Plot the function y = sin(t) from 0 to 10 seconds with labeled axes and a suitable title. Q3: Find the roots of s^4 + 3s^3 - 15s^2 - 2s + 9 . Hint: First declare s = tf('s') and use zero(_yourFunction_) to find the roots.","title":"Instructions:"},{"location":"lab-docs/lab1/#2_self-balancing_robot_setup","text":"In this section, you will walk through the process of setting up the self-balancing robot and enable your programming environment in MATLAB.","title":"2. Self-Balancing Robot Setup"},{"location":"lab-docs/lab1/#instructions_1","text":"If you don't have MATLAB, please follow this guide on installing MATLAB. Download and set up Visual Studio Code following this guide . Download Git (with Git Bash) here Calibrating the robot sensors (on-board IMU): The self-balancing robot uses an IMU (inertial measurement unit) for pose measurement. This sensor needs to be calibrated properly. Follow the instructions here","title":"Instructions:"},{"location":"lab-docs/lab1/#what_to_submit","text":"Prepare a report which contains the following: Introduction: a few sentences to introduce the topic of the lab Section 1: MATLAB Publish your script (and its output) as a PDF from MATLAB. Follow this guide to see how to. Section 2: Self-balancing Robot Setup [ Nothing to report here. Just ensure you are able to calibrate your robot ] Conclusion: a few sentences concluding the report explaining the goals, what you learned, and any other conclusions.","title":"What to Submit:"},{"location":"lab-docs/lab2/","text":"Lab 2: Mathematical Modeling I","title":"Lab 2"},{"location":"lab-docs/lab2/#lab_2_mathematical_modeling_i","text":"","title":"Lab 2: Mathematical Modeling I"},{"location":"lab-docs/lab3/","text":"Lab 3: Laplace Transforms Mathematical Modeling II","title":"Lab 3"},{"location":"lab-docs/lab3/#lab_3_laplace_transforms_mathematical_modeling_ii","text":"","title":"Lab 3: Laplace Transforms &amp; Mathematical Modeling II"},{"location":"lab-docs/lab4/","text":"LAB 4: Transfer Functions Transient Response","title":"Lab 4"},{"location":"lab-docs/lab4/#lab_4_transfer_functions_transient_response","text":"","title":"LAB 4: Transfer Functions &amp; Transient Response"},{"location":"lab-docs/lab5/","text":"LAB 5: Control Design: P, PI, PID Controllers","title":"Lab 5"},{"location":"lab-docs/lab5/#lab_5_control_design_p_pi_pid_controllers","text":"","title":"LAB 5: Control Design: P, PI, PID Controllers"},{"location":"lab-docs/lab6/","text":"LAB 6: Stability Analysis Frequency Response","title":"Lab 6"},{"location":"lab-docs/lab6/#lab_6_stability_analysis_frequency_response","text":"","title":"LAB 6: Stability Analysis &amp; Frequency Response"},{"location":"lab-docs/lab7/","text":"LAB 7: Controller Tuning Final Competition","title":"LAB 7: Controller Tuning & Final Competition"},{"location":"lab-docs/lab7/#lab_7_controller_tuning_final_competition","text":"","title":"LAB 7: Controller Tuning &amp; Final Competition"},{"location":"lab-overview/","text":"ES3011 Controls Lab Documentation Welcome to the ES3011 Experimental! We're excited to have you join us as we pilot this hands-on lab option for the ES3011 class. In this lab, you will get to hands-on experience learning fundamental control system concepts such as modeling, control design and analysis using the BalBot (self-balancing robot). Note The overarching goal of this lab is to analyze and design a feedback controller for the BalBot robot, to keep it robust to disturbances. Lab Schedule Lab# Title Date 1 Intro to MATLAB Self-Balancing Robot Setup Feb. 5 2 Mathematical Modeling I Feb. 12 3 Laplace Transforms Mathematical Modeling II Feb. 19 4 Transfer Functions Transient Response Feb. 26 * 5 Control Design: P, PI, PID Controllers Mar. 5 6 Stability Analysis Frequency Response Mar. 12","title":"Lab Overview"},{"location":"lab-overview/#es3011_controls_lab_documentation","text":"Welcome to the ES3011 Experimental! We're excited to have you join us as we pilot this hands-on lab option for the ES3011 class. In this lab, you will get to hands-on experience learning fundamental control system concepts such as modeling, control design and analysis using the BalBot (self-balancing robot). Note The overarching goal of this lab is to analyze and design a feedback controller for the BalBot robot, to keep it robust to disturbances.","title":"ES3011 Controls Lab Documentation"},{"location":"lab-overview/#lab_schedule","text":"Lab# Title Date 1 Intro to MATLAB Self-Balancing Robot Setup Feb. 5 2 Mathematical Modeling I Feb. 12 3 Laplace Transforms Mathematical Modeling II Feb. 19 4 Transfer Functions Transient Response Feb. 26 * 5 Control Design: P, PI, PID Controllers Mar. 5 6 Stability Analysis Frequency Response Mar. 12","title":"Lab Schedule"}]}